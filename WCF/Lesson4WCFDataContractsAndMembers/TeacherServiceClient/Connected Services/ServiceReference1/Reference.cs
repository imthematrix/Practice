//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITeacherService")]
    public interface ITeacherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/InsertNewEmployee", ReplyAction="http://tempuri.org/ITeacherService/InsertNewEmployeeResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeacherObject.PartTimeTeacher))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeacherObject.FullTimeTeacher))]
        int InsertNewEmployee(TeacherObject.TeacherItem teacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/InsertNewEmployee", ReplyAction="http://tempuri.org/ITeacherService/InsertNewEmployeeResponse")]
        System.Threading.Tasks.Task<int> InsertNewEmployeeAsync(TeacherObject.TeacherItem teacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/ShowTeacherByID", ReplyAction="http://tempuri.org/ITeacherService/ShowTeacherByIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeacherObject.PartTimeTeacher))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeacherObject.FullTimeTeacher))]
        TeacherObject.TeacherItem ShowTeacherByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/ShowTeacherByID", ReplyAction="http://tempuri.org/ITeacherService/ShowTeacherByIDResponse")]
        System.Threading.Tasks.Task<TeacherObject.TeacherItem> ShowTeacherByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/ShowAllDepartments", ReplyAction="http://tempuri.org/ITeacherService/ShowAllDepartmentsResponse")]
        System.Web.UI.WebControls.ListItem[] ShowAllDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/ShowAllDepartments", ReplyAction="http://tempuri.org/ITeacherService/ShowAllDepartmentsResponse")]
        System.Threading.Tasks.Task<System.Web.UI.WebControls.ListItem[]> ShowAllDepartmentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeacherServiceChannel : ServiceReference1.ITeacherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TeacherServiceClient : System.ServiceModel.ClientBase<ServiceReference1.ITeacherService>, ServiceReference1.ITeacherService {
        
        public TeacherServiceClient() {
        }
        
        public TeacherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TeacherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeacherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeacherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertNewEmployee(TeacherObject.TeacherItem teacher) {
            return base.Channel.InsertNewEmployee(teacher);
        }
        
        public System.Threading.Tasks.Task<int> InsertNewEmployeeAsync(TeacherObject.TeacherItem teacher) {
            return base.Channel.InsertNewEmployeeAsync(teacher);
        }
        
        public TeacherObject.TeacherItem ShowTeacherByID(int ID) {
            return base.Channel.ShowTeacherByID(ID);
        }
        
        public System.Threading.Tasks.Task<TeacherObject.TeacherItem> ShowTeacherByIDAsync(int ID) {
            return base.Channel.ShowTeacherByIDAsync(ID);
        }
        
        public System.Web.UI.WebControls.ListItem[] ShowAllDepartments() {
            return base.Channel.ShowAllDepartments();
        }
        
        public System.Threading.Tasks.Task<System.Web.UI.WebControls.ListItem[]> ShowAllDepartmentsAsync() {
            return base.Channel.ShowAllDepartmentsAsync();
        }
    }
}
