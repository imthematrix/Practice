//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorService.TestService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://aig.com/webservices/", ConfigurationName="TestService.CalculatorServiceSoap")]
    public interface CalculatorServiceSoap {
        
        // CODEGEN: Generating message contract since the wrapper name (Add2Number) of message Add2Number does not match the default value (Add)
        [System.ServiceModel.OperationContractAttribute(Action="http://aig.com/webservices/Add2Number", ReplyAction="*")]
        CalculatorService.TestService.Add2Number1 Add(CalculatorService.TestService.Add2Number request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aig.com/webservices/Add2Number", ReplyAction="*")]
        System.Threading.Tasks.Task<CalculatorService.TestService.Add2Number1> AddAsync(CalculatorService.TestService.Add2Number request);
        
        // CODEGEN: Generating message contract since the wrapper name (Add3Number) of message Add3Number does not match the default value (Add1)
        [System.ServiceModel.OperationContractAttribute(Action="http://aig.com/webservices/Add3Number", ReplyAction="*")]
        CalculatorService.TestService.Add3Number1 Add1(CalculatorService.TestService.Add3Number request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aig.com/webservices/Add3Number", ReplyAction="*")]
        System.Threading.Tasks.Task<CalculatorService.TestService.Add3Number1> Add1Async(CalculatorService.TestService.Add3Number request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add2Number", WrapperNamespace="http://aig.com/webservices/", IsWrapped=true)]
    public partial class Add2Number {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://aig.com/webservices/", Order=0)]
        public int firstNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://aig.com/webservices/", Order=1)]
        public int secondNumber;
        
        public Add2Number() {
        }
        
        public Add2Number(int firstNumber, int secondNumber) {
            this.firstNumber = firstNumber;
            this.secondNumber = secondNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add2NumberResponse", WrapperNamespace="http://aig.com/webservices/", IsWrapped=true)]
    public partial class Add2Number1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://aig.com/webservices/", Order=0)]
        public int Add2NumberResult;
        
        public Add2Number1() {
        }
        
        public Add2Number1(int Add2NumberResult) {
            this.Add2NumberResult = Add2NumberResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add3Number", WrapperNamespace="http://aig.com/webservices/", IsWrapped=true)]
    public partial class Add3Number {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://aig.com/webservices/", Order=0)]
        public int firstNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://aig.com/webservices/", Order=1)]
        public int secondNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://aig.com/webservices/", Order=2)]
        public int thirdNumber;
        
        public Add3Number() {
        }
        
        public Add3Number(int firstNumber, int secondNumber, int thirdNumber) {
            this.firstNumber = firstNumber;
            this.secondNumber = secondNumber;
            this.thirdNumber = thirdNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add3NumberResponse", WrapperNamespace="http://aig.com/webservices/", IsWrapped=true)]
    public partial class Add3Number1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://aig.com/webservices/", Order=0)]
        public int Add3NumberResult;
        
        public Add3Number1() {
        }
        
        public Add3Number1(int Add3NumberResult) {
            this.Add3NumberResult = Add3NumberResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CalculatorServiceSoapChannel : CalculatorService.TestService.CalculatorServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorServiceSoapClient : System.ServiceModel.ClientBase<CalculatorService.TestService.CalculatorServiceSoap>, CalculatorService.TestService.CalculatorServiceSoap {
        
        public CalculatorServiceSoapClient() {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CalculatorService.TestService.Add2Number1 CalculatorService.TestService.CalculatorServiceSoap.Add(CalculatorService.TestService.Add2Number request) {
            return base.Channel.Add(request);
        }
        
        public int Add(int firstNumber, int secondNumber) {
            CalculatorService.TestService.Add2Number inValue = new CalculatorService.TestService.Add2Number();
            inValue.firstNumber = firstNumber;
            inValue.secondNumber = secondNumber;
            CalculatorService.TestService.Add2Number1 retVal = ((CalculatorService.TestService.CalculatorServiceSoap)(this)).Add(inValue);
            return retVal.Add2NumberResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CalculatorService.TestService.Add2Number1> CalculatorService.TestService.CalculatorServiceSoap.AddAsync(CalculatorService.TestService.Add2Number request) {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<CalculatorService.TestService.Add2Number1> AddAsync(int firstNumber, int secondNumber) {
            CalculatorService.TestService.Add2Number inValue = new CalculatorService.TestService.Add2Number();
            inValue.firstNumber = firstNumber;
            inValue.secondNumber = secondNumber;
            return ((CalculatorService.TestService.CalculatorServiceSoap)(this)).AddAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CalculatorService.TestService.Add3Number1 CalculatorService.TestService.CalculatorServiceSoap.Add1(CalculatorService.TestService.Add3Number request) {
            return base.Channel.Add1(request);
        }
        
        public int Add1(int firstNumber, int secondNumber, int thirdNumber) {
            CalculatorService.TestService.Add3Number inValue = new CalculatorService.TestService.Add3Number();
            inValue.firstNumber = firstNumber;
            inValue.secondNumber = secondNumber;
            inValue.thirdNumber = thirdNumber;
            CalculatorService.TestService.Add3Number1 retVal = ((CalculatorService.TestService.CalculatorServiceSoap)(this)).Add1(inValue);
            return retVal.Add3NumberResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CalculatorService.TestService.Add3Number1> CalculatorService.TestService.CalculatorServiceSoap.Add1Async(CalculatorService.TestService.Add3Number request) {
            return base.Channel.Add1Async(request);
        }
        
        public System.Threading.Tasks.Task<CalculatorService.TestService.Add3Number1> Add1Async(int firstNumber, int secondNumber, int thirdNumber) {
            CalculatorService.TestService.Add3Number inValue = new CalculatorService.TestService.Add3Number();
            inValue.firstNumber = firstNumber;
            inValue.secondNumber = secondNumber;
            inValue.thirdNumber = thirdNumber;
            return ((CalculatorService.TestService.CalculatorServiceSoap)(this)).Add1Async(inValue);
        }
    }
}
